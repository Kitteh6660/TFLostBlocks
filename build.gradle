plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.+'
}

archivesBaseName ="${rootProject.mod_name}-${minecraft_version}-${mod_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
	    workingDirectory project.file('run')
	    systemProperty 'mixin.env.disableRefMap', 'true'
        modSource project.sourceSets.main
    }	
	client {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
	}
	server {
		systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
	}
	data {
		programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
	}
}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    // flatDir {
    //     dir 'libs'
    // }
	maven { 
	    url "https://cursemaven.com"
        content { includeGroup "curse.maven" }
	}
}

dependencies {
    implementation("net.neoforged:neoforge:${project.neoforge_version}")
	implementation "curse.maven:the-twilight-forest-227639:5699076"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
		minecraft_version : minecraft_version,
		minecraft_version_range: minecraft_version_range,
		neoforge_version : neoforge_version,
		mod_id : mod_id,
		mod_name : mod_name,
		license : mod_license,
		version : mod_version,
		authors : mod_authors,
		description : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
